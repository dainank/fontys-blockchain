{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../src/client/ui/common.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAkB,MAAM,4CAA4C,CAAC;AAUlF,MAAM,UAAU,QAAQ,CAAC,IAAY;IACnC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;AAC3E,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,YAA2B;IAC5D,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,GAAG,CAAC,CAAC,MAAM,MAAM,CAAC,CAAC,SAAS,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvF,CAAC;AAED,MAAM,UAAU,YAAY;IAC1B,mCAAmC;IACnC,8CAA8C;IAC9C,sDAAsD;IACtD,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,EAC5B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,mDAAmD;IACnD,gCAAgC;IACvD,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAE5D,OAAO,WAAW,CAAC;AACvB,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,kBAA0B,GAAG;IACvD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC7B,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,KAAW,EAAE,CAkBlB;AAlBD,WAAiB,EAAE;IACjB,SAAgB,MAAM,CAAC,KAAa,EAAE,WAAoB,KAAK;QAC7D,OAAO,IAAI,CAAA;wCACyB,QAAQ,mBAAmB,KAAK;KACnE,CAAC;IACJ,CAAC;IAJe,SAAM,SAIrB,CAAA;IAED,SAAgB,SAAS,CAAC,IAAY,EAAE,KAAU,EAAE,aAA4B,EAAE,WAAoB,KAAK,EAAE,OAA0B,MAAM;QAC3I,OAAO,IAAI,CAAA;oBACK,IAAI;oBACJ,IAAI;sBACF,KAAK;uBACJ,aAAa;yBACX,QAAQ;2BACN,QAAQ,CAAC,IAAI,CAAC;;KAEpC,CAAC;IACJ,CAAC;IAVe,YAAS,YAUxB,CAAA;AACH,CAAC,EAlBgB,EAAE,KAAF,EAAE,QAkBlB","sourcesContent":["import { html, TemplateResult } from '../../../node_modules/lit-html/lit-html.js';\r\nimport { Transaction } from '../lib/blockchain-node.js';\r\n\r\nexport type Callback = () => void;\r\n\r\nexport interface Renderable<T> {\r\n  requestRendering: Callback;\r\n  render(data: T): TemplateResult;\r\n}\r\n\r\nexport function titleize(text: string) {\r\n  return text.toLowerCase().replace(/(?:^|\\s|-)\\S/g, x => x.toUpperCase());\r\n}\r\n\r\nexport function formatTransactions(transactions: Transaction[]): string {\r\n  return transactions.map(t =>`${t.sender} â†’ ${t.recipient}: $${t.amount}`).join('\\n');\r\n}\r\n\r\nexport function cryptoRandom(){\r\n  // return a crypto generated number\r\n  // between 0 and 1 (0 inclusive, 1 exclusive);\r\n  // Mimics the Math.random function in range of results\r\n  var array = new Uint32Array(1),\r\n    max = Math.pow(2, 32), // normally the max is 2^32 -1 but we remove the -1\r\n                           //  so that the max is exclusive\r\n    randomValue = window.crypto.getRandomValues(array)[0] / max;\r\n\r\n    return randomValue;\r\n}\r\n\r\nexport function randomDelay(maxMilliseconds: number = 100): Promise<void> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => resolve(), Math.floor(cryptoRandom() * Math.floor(maxMilliseconds)));\r\n  });\r\n}\r\n\r\nexport namespace UI {\r\n  export function button(label: string, disabled: boolean = false) {\r\n    return html`\r\n      <button type=\"submit\" ?disabled=${disabled} class=\"ripple\">${label}</button>\r\n    `;\r\n  }\r\n\r\n  export function formField(name: string, value: any, changeHandler: EventListener, disabled: boolean = false, type: 'text' | 'number' = 'text') {\r\n    return html`\r\n      <input name=${name}\r\n             type=${type}\r\n             .value=${value}\r\n             @change=${changeHandler}\r\n             ?disabled=${disabled}\r\n             placeholder=${titleize(name)}\r\n             autocomplete=\"off\">\r\n    `;\r\n  }\r\n}\r\n"]}